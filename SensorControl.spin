{  Project: EE-7 Assignment  Platform: Parallax Project USB Board & RoboClaw  Revision: 1.1  Author: Derek  Date: 10th Nov 2021  Log:        10/11/2021: Confirmed functionality of sensors and program.        21/11/2021: Added cog manipulation}CON  ultra1SCL = 6  ultra1SDA = 7  ultra2SCL = 8  ultra2SDA = 9  tof1SCL = 0  tof1SDA = 1  tof1RST = 14  tof2SCL = 2  tof2SDA = 3  tof2RST = 15  tofAdd = $29VAR  long  cogSensorID, cogSensorStack[128]  long  _Ms_001OBJ  Ultra         : "EE-7_Ultra_v2.spin"  ToF[2]        : "EE-7_ToF.spin"PUB Start (mainMSVal, mainUltra1Add, mainUltra2Add, mainTof1Add, mainTof2Add)  _Ms_001 := mainMSVal  StopCore  cogSensorID := cognew(SensorCore(mainUltra1Add, mainUltra2Add, mainTof1Add, mainTof2Add), @cogSensorStack) + 1PUB SensorCore (mainUltra1Add, mainUltra2Add, mainTof1Add, mainTof2Add)  Ultra.Init(ultra1SCL,ultra1SDA, 0) 'initialise front ultrasonic sensor  Ultra.Init(ultra2SCL,ultra2SDA, 1) 'initialise rear ultrasonic sensor  tofInit 'initialise both tof sensors  Pause(1000)  repeat 'Read and store respective values into their addresses    long[mainUltra1Add] := Ultra.readSensor(0) 'Get value of ultrasonic sensor's reading in front    long[mainUltra2Add] := Ultra.readSensor(1) 'Get value of ultrasonic sensor's reading behind    long[mainTof1Add] := ToF[0].GetSingleRange(tofAdd) 'Get value of tof sensor's reading in front    long[mainTof2Add] := ToF[1].GetSingleRange(tofAdd) 'Get value of tof sensor's reading behind    Pause(25)PRI tofInit 'to initialise TOF  ToF[0].Init(tof1SCL,tof1SDA, tof1RST)  ToF[0].ChipReset(1) 'Last state is ON position  Pause(1000)  ToF[0].FreshReset(tofAdd)  ToF[0].MandatoryLoad(tofAdd)  ToF[0].RecommendedLoad(tofAdd)  ToF[0].FreshReset(tofAdd)  ToF[1].Init(tof2SCL,tof2SDA, tof2RST)  ToF[1].ChipReset(1) 'Last state is ON position  Pause(1000)  ToF[1].FreshReset(tofAdd)  ToF[1].MandatoryLoad(tofAdd)  ToF[1].RecommendedLoad(tofAdd)  ToF[1].FreshReset(tofAdd)  returnPUB StopCore 'stop code in core and release core  if cogSensorID    cogstop(~cogSensorID - 1)PRI Pause(ms) | t  t := cnt - 1088  repeat (ms #> 0)    waitcnt(t += _Ms_001)  return